services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ~/.log/nginx:/var/log/nginx
    depends_on:
      - web
      - postgres

  web:
    container_name: web
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - .env
    command: [
      "/bin/sh", "-c",
      "cd src/ &&
      poetry run python manage.py migrate &&
      poetry run daphne -b 0.0.0.0 -p 8000 core.asgi:application"
    ]
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:16
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:6
    restart: always
    volumes:
      - redis:/data
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres:
  redis:
  prometheus:
  grafana:
